@*
 * RadiantPi.Lumagen - Communication client for Lumagen RadiancePro
 * Copyright (C) 2020-2021 - Steve G. Bjorg
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Affero General Public License along
 * with this program. If not, see <https://www.gnu.org/licenses/>.
 *@

@inherits LayoutComponentBase

<div class="row g-3 align-items-center">
    <div class="col-auto">
        <label for=@Id class="col-form-label">@Text</label>
    </div>
    <div class="col-auto">
        <input class="form-control" id=@Id value=@CurrentValue @oninput="OnInputChanged">
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary" @onclick="ButtonClickedAsync" @onclick:preventDefault disabled=@Disabled>Set</button>
    </div>
</div>

@code {

    //--- Properties ---

    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string OriginalValue { get; set; }

    [Parameter]
    public string CurrentValue { get; set; }

    [Parameter]
    public EventCallback<string> OnValueChange { get; set; }

    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    private bool Disabled => !CurrentValue.Any() || (CurrentValue == OriginalValue);

    //--- Methods ---
    private void OnInputChanged(ChangeEventArgs args) {
        CurrentValue = (string)args.Value;
        OnValueChange.InvokeAsync(CurrentValue);
    }

    private async Task ButtonClickedAsync() => await OnClick.InvokeAsync(CurrentValue);
}