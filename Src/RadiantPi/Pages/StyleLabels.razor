@page "/style-labels"

@inject IRadiancePro Client

<h1>CMS Labels</h1>

<form>
    <fieldset>
        @for(var style = RadianceProStyle.Style0; style <= RadianceProStyle.Style7; ++style) {
            var localStyle = style;
            <div class="mb-3">
                <Label
                    Id=@localStyle.ToString()
                    Text=@($"Style {(int)localStyle} Label")
                    OriginalValue=@OriginalLabels[localStyle]
                    CurrentValue=@Labels[localStyle]
                    OnValueChange=@(value => Labels[localStyle] = value)
                    OnClick="@(async () => await UpdateStyleAsync(localStyle))"
                />
            </div>
        }
    </fieldset>
</form>

@code {

    //--- Properties ---
    protected Dictionary<RadianceProStyle, string> OriginalLabels = new Dictionary<RadianceProStyle, string>();
    protected Dictionary<RadianceProStyle, string> Labels = new Dictionary<RadianceProStyle, string>();

    //--- Methods ---
    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();

        // read all style labels from device
        for(var style = RadianceProStyle.Style0; style <= RadianceProStyle.Style7; ++style) {
            var label = await Client.GetStyleLabel(style);
            Labels[style] = label;
            OriginalLabels[style] = label;
        }
    }

    protected async Task UpdateStyleAsync(RadianceProStyle style) {
        var label = Labels[style];
        await Client.SetStyleLabel(style, label);
        OriginalLabels[style] = label;
    }
}
