@page "/"

@using RadiantPi.Lumagen.Model

@inject IRadiancePro Client

<h1>Device Information</h1>

<form>
    <fieldset disabled=@Disabled>
        @RenderLabel("model-name", "Model Name", DeviceInfo.ModelName)
        @RenderLabel("model-nr", "Model Nr", DeviceInfo.ModelNumber)
        @RenderLabel("serial-nr", "Serial Nr", DeviceInfo.SerialNumber)
        @RenderLabel("software-revision", "Software", DeviceInfo.SoftwareRevision)
    </fieldset>
</form>

@code {

    //--- Properties ---
    protected bool Disabled { get; set; } = true;
    protected GetDeviceInfoResponse DeviceInfo { get; set; } = new GetDeviceInfoResponse {
        ModelName = "(loading...)",
        ModelNumber = "(loading...)",
        SerialNumber = "(loading...)",
        SoftwareRevision = "(loading...)"
    };

    protected GetModeInfoResponse ModeInfo { get; set; } = new GetModeInfoResponse {
        ActiveInputConfigNumber = "(loading...)",
        InputStatus = RadianceProInputStatus.Undefined,
        Output3DMode = RadiancePro3D.Undefined,
        OutputAspectRatio = "(loading...)",
        OutputCms = RadianceProCms.Undefined,
        OutputColorSpace = RadianceProColorSpace.Undefined,
        OutputEnabled = 0,
        OutputNonLinearStretchActive = false,
        OutputStyle = RadianceProStyle.Undefined,
        OutputVerticalRate = "(loading...)",
        OutputVerticalResolution = "(loading...)",
        OutputVideoMode = RadianceProVideoMode.Undefined,
        PhysicalInputSelected = 0,
        Source3DMode = RadiancePro3D.Undefined,
        SourceContentAspectRatio = "(loading...)",
        SourceDynamicRange = RadianceProDynamicRange.Undefined,
        SourceRasterAspectRatio = "(loading...)",
        SourceVerticalRate = "(loading...)",
        SourceVerticalResolution = "(loading...)",
        SourceVideoMode = RadianceProVideoMode.Undefined,
        VirtualInputSelected = 0
    };

    //--- Methods ---
    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        DeviceInfo = await Client.GetDeviceInfoAsync();
        ModeInfo = await Client.GetModeInfoAsync();
        Disabled = false;
    }

    protected RenderFragment RenderLabel(string id, string title, string value) {
        return @<div class="mb-3">
            <div class="row g-3 align-items-center">
                <div class="col-auto">
                    <label for=@id class="col-form-label">@title</label>
                </div>
                <div class="col-auto">
                    <input class="form-control" id=@id value=@value readonly>
                </div>
            </div>
       </div>;
    }
}